# bash-completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

# path
export CODE_PATH="$HOME/code"
export NVM_DIR="$HOME/.nvm"
export PATH="$HOME/bin:$CODE_PATH/ops-tools/utils:/Applications/MacVim.app/Contents/bin:$PATH"
#export JAVA_HOME=`/usr/libexec/java_home`
export JAVA_HOME='/Library/Java/JavaVirtualMachines/jdk1.8.0_172.jdk/Contents/Home'
# git prompt
export PS1='\[\033[01;32m\]\u@\h\[\033[01;34m\] \w\[\033[1;31m\]$(__git_ps1)\[\033[01;34m\] \$\[\033[00m\] '

source "/usr/local/opt/nvm/nvm.sh"
source "/usr/local/etc/profile.d/z.sh"
source "/Users/dmarr/.rvm/scripts/rvm"


# aliases
[ -f $HOME/.alias ] && source $HOME/.alias

psg() {
    ps axu | grep -v grep | grep "$@" -i --color=auto;
}

pullreq() {
    [ -z $BRANCH ] && BRANCH="dev"
    HEAD=$(git symbolic-ref HEAD 2> /dev/null)
    [ -z $HEAD ] && return # Return if no head
    MSG=`git log -n1 --pretty=%s`
    CUR_BRANCH=${HEAD#refs/heads/}

    if [[ "$CUR_BRANCH" == "dev" || "$CUR_BRANCH" == "master" ]]; then
        echo "You can't push directly to $CUR_BRANCH, thicky"
        return
    fi
    git push origin $CUR_BRANCH
    hub pull-request -b $BRANCH -h Crowdtilt:$CUR_BRANCH
}

#Git ProTip - Delete all local branches that have been merged into HEAD
git_purge_local_branches() {
    set -x
    BRANCHES=`git branch --merged | grep -v '^*' | grep -v 'master' | grep -v 'dev' | tr -d '\n'`
    echo "Running: git branch -d $BRANCHES"
    git branch -d $BRANCHES
    set +x
}

